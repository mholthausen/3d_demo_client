define(["exports","./when-54c2dc71","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-6f81ad4c","./PolylineVolumeGeometryLibrary-0216ec14","./PolylinePipeline-7685bebd"],(function(a,e,r,n,t,i,s){"use strict";var o={},C=new n.Cartesian3,l=new n.Cartesian3,y=new n.Cartesian3,u=new n.Cartesian3,c=[new n.Cartesian3,new n.Cartesian3],d=new n.Cartesian3,p=new n.Cartesian3,m=new n.Cartesian3,g=new n.Cartesian3,h=new n.Cartesian3,f=new n.Cartesian3,w=new n.Cartesian3,z=new n.Cartesian3,x=new n.Cartesian3,P=new n.Cartesian3,A=new t.Quaternion,B=new t.Matrix3;function v(a,e,s,o,y){var u,c=n.Cartesian3.angleBetween(n.Cartesian3.subtract(e,a,C),n.Cartesian3.subtract(s,a,l)),d=o===i.CornerType.BEVELED?1:Math.ceil(c/r.CesiumMath.toRadians(5))+1,p=(o=3*d,new Array(o));p[o-3]=s.x,p[o-2]=s.y,p[o-1]=s.z,u=y?t.Matrix3.fromQuaternion(t.Quaternion.fromAxisAngle(n.Cartesian3.negate(a,C),c/d,A),B):t.Matrix3.fromQuaternion(t.Quaternion.fromAxisAngle(a,c/d,A),B);var m=0;e=n.Cartesian3.clone(e,C);for(var g=0;g<d;g++)e=t.Matrix3.multiplyByVector(u,e,e),p[m++]=e.x,p[m++]=e.y,p[m++]=e.z;return p}function E(a,e,r,t){var i=C;return[(t||(e=n.Cartesian3.negate(e,e)),i=n.Cartesian3.add(a,e,i)).x,i.y,i.z,r.x,r.y,r.z]}function S(a,e,r,t){for(var i=new Array(a.length),s=new Array(a.length),o=n.Cartesian3.multiplyByScalar(e,r,C),c=n.Cartesian3.negate(o,l),d=0,p=a.length-1,m=0;m<a.length;m+=3){var g=n.Cartesian3.fromArray(a,m,y),h=n.Cartesian3.add(g,c,u);i[d++]=h.x,i[d++]=h.y,i[d++]=h.z,g=n.Cartesian3.add(g,o,u),s[p--]=g.z,s[p--]=g.y,s[p--]=g.x}return t.push(i,s),t}o.addAttribute=function(a,r,n,t){var i=r.x,s=r.y;r=r.z,e.defined(n)&&(a[n]=i,a[n+1]=s,a[n+2]=r),e.defined(t)&&(a[t]=r,a[t-1]=s,a[t-2]=i)};var b=new n.Cartesian3,D=new n.Cartesian3;o.computePositions=function(a){var e=a.granularity,t=a.positions,o=a.ellipsoid,l=a.width/2,y=a.cornerType,u=a.saveAttributes,A=d,B=p,M=m,T=g,N=h,L=f,O=w,R=z,V=x,Q=P,U=[],G=u?[]:void 0,I=u?[]:void 0,q=t[0],j=t[1];B=n.Cartesian3.normalize(n.Cartesian3.subtract(j,q,B),B),A=o.geodeticSurfaceNormal(q,A),T=n.Cartesian3.normalize(n.Cartesian3.cross(A,B,T),T),u&&(G.push(T.x,T.y,T.z),I.push(A.x,A.y,A.z)),O=n.Cartesian3.clone(q,O),q=j,M=n.Cartesian3.negate(B,M);for(var k,F,H,J,K,W,X,Y=[],Z=t.length,$=1;$<Z-1;$++){A=o.geodeticSurfaceNormal(q,A),j=t[$+1],B=n.Cartesian3.normalize(n.Cartesian3.subtract(j,q,B),B),N=n.Cartesian3.normalize(n.Cartesian3.add(B,M,N),N);var _=n.Cartesian3.multiplyByScalar(A,n.Cartesian3.dot(B,A),b);n.Cartesian3.subtract(B,_,_),n.Cartesian3.normalize(_,_);var aa=n.Cartesian3.multiplyByScalar(A,n.Cartesian3.dot(M,A),D);n.Cartesian3.subtract(M,aa,aa),n.Cartesian3.normalize(aa,aa),r.CesiumMath.equalsEpsilon(Math.abs(n.Cartesian3.dot(_,aa)),1,r.CesiumMath.EPSILON7)||(N=n.Cartesian3.cross(N,A,N),N=n.Cartesian3.cross(A,N,N),N=n.Cartesian3.normalize(N,N),_=l/Math.max(.25,n.Cartesian3.magnitude(n.Cartesian3.cross(N,M,C))),aa=i.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(B,M,q,o),N=n.Cartesian3.multiplyByScalar(N,_,N),aa?(R=n.Cartesian3.add(q,N,R),Q=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,l,Q),Q),V=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,2*l,V),V),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(Q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(A.x,A.y,A.z)),L=n.Cartesian3.clone(V,L),T=n.Cartesian3.normalize(n.Cartesian3.cross(A,B,T),T),V=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,2*l,V),V),O=n.Cartesian3.add(R,n.Cartesian3.multiplyByScalar(T,l,O),O),y===i.CornerType.ROUNDED||y===i.CornerType.BEVELED?Y.push({leftPositions:v(R,L,V,y,aa)}):Y.push({leftPositions:E(q,n.Cartesian3.negate(N,N),V,aa)})):(V=n.Cartesian3.add(q,N,V),Q=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,l,Q),Q),Q),R=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,2*l,R),R),R),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(Q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(A.x,A.y,A.z)),L=n.Cartesian3.clone(R,L),T=n.Cartesian3.normalize(n.Cartesian3.cross(A,B,T),T),R=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,2*l,R),R),R),O=n.Cartesian3.add(V,n.Cartesian3.negate(n.Cartesian3.multiplyByScalar(T,l,O),O),O),y===i.CornerType.ROUNDED||y===i.CornerType.BEVELED?Y.push({rightPositions:v(V,L,R,y,aa)}):Y.push({rightPositions:E(q,N,R,aa)})),M=n.Cartesian3.negate(B,M)),q=j}return A=o.geodeticSurfaceNormal(q,A),c[0]=n.Cartesian3.clone(O,c[0]),c[1]=n.Cartesian3.clone(q,c[1]),U=S(s.PolylinePipeline.generateArc({positions:c,granularity:e,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(A.x,A.y,A.z)),y===i.CornerType.ROUNDED&&(F=d,H=p,J=m,K=(k=U)[1],H=n.Cartesian3.fromArray(k[1],K.length-3,H),J=n.Cartesian3.fromArray(k[0],0,J),W=v(F=n.Cartesian3.midpoint(H,J,F),H,J,i.CornerType.ROUNDED,!1),a=k[(X=k.length-1)-1],K=k[X],H=n.Cartesian3.fromArray(a,a.length-3,H),J=n.Cartesian3.fromArray(K,0,J),J=[W,v(F=n.Cartesian3.midpoint(H,J,F),H,J,i.CornerType.ROUNDED,!1)]),{positions:U,corners:Y,lefts:G,normals:I,endPositions:J}},a.CorridorGeometryLibrary=o}));