define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-6f81ad4c","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-700c1da0","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-7f3bcd5c","./Plane-b6058d9b","./VertexFormat-7572c785","./arrayRemoveDuplicates-ebc732b0","./EllipsoidRhumbLine-c704bf4c","./EllipsoidGeodesic-30fae80b","./PolylinePipeline-7685bebd","./WallGeometryLibrary-af3be376"],(function(e,t,a,i,n,r,o,s,m,l,u,p,d,c,y,f,g,h,v){"use strict";var C=new i.Cartesian3,b=new i.Cartesian3,x=new i.Cartesian3,A=new i.Cartesian3,_=new i.Cartesian3,E=new i.Cartesian3,w=new i.Cartesian3;function F(t){var n=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,r=t.maximumHeights,o=t.minimumHeights,s=e.defaultValue(t.vertexFormat,c.VertexFormat.DEFAULT),m=e.defaultValue(t.granularity,a.CesiumMath.RADIANS_PER_DEGREE);t=e.defaultValue(t.ellipsoid,i.Ellipsoid.WGS84),this._positions=n,this._minimumHeights=o,this._maximumHeights=r,this._vertexFormat=c.VertexFormat.clone(s),this._granularity=m,this._ellipsoid=i.Ellipsoid.clone(t),this._workerName="createWallGeometry",n=1+n.length*i.Cartesian3.packedLength+2,e.defined(o)&&(n+=o.length),e.defined(r)&&(n+=r.length),this.packedLength=n+i.Ellipsoid.packedLength+c.VertexFormat.packedLength+1}F.pack=function(t,a,n){var r;n=e.defaultValue(n,0);var o=t._positions,s=o.length;for(a[n++]=s,r=0;r<s;++r,n+=i.Cartesian3.packedLength)i.Cartesian3.pack(o[r],a,n);var m=t._minimumHeights;if(s=e.defined(m)?m.length:0,a[n++]=s,e.defined(m))for(r=0;r<s;++r)a[n++]=m[r];var l=t._maximumHeights;if(s=e.defined(l)?l.length:0,a[n++]=s,e.defined(l))for(r=0;r<s;++r)a[n++]=l[r];return i.Ellipsoid.pack(t._ellipsoid,a,n),n+=i.Ellipsoid.packedLength,c.VertexFormat.pack(t._vertexFormat,a,n),a[n+=c.VertexFormat.packedLength]=t._granularity,a};var L=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),k=new c.VertexFormat,H={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:L,vertexFormat:k,granularity:void 0};return F.unpack=function(t,a,n){a=e.defaultValue(a,0);for(var r,o,s=t[a++],m=new Array(s),l=0;l<s;++l,a+=i.Cartesian3.packedLength)m[l]=i.Cartesian3.unpack(t,a);if(0<(s=t[a++]))for(r=new Array(s),l=0;l<s;++l)r[l]=t[a++];if(0<(s=t[a++]))for(o=new Array(s),l=0;l<s;++l)o[l]=t[a++];var u=i.Ellipsoid.unpack(t,a,L);a+=i.Ellipsoid.packedLength;var p=c.VertexFormat.unpack(t,a,k),d=t[a+=c.VertexFormat.packedLength];return e.defined(n)?(n._positions=m,n._minimumHeights=r,n._maximumHeights=o,n._ellipsoid=i.Ellipsoid.clone(u,n._ellipsoid),n._vertexFormat=c.VertexFormat.clone(p,n._vertexFormat),n._granularity=d,n):(H.positions=m,H.minimumHeights=r,H.maximumHeights=o,H.granularity=d,new F(H))},F.fromConstantHeights=function(t){var a=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,i=t.minimumHeight,n=t.maximumHeight,r=e.defined(i),o=e.defined(n);if(r||o)for(var s=a.length,m=r?new Array(s):void 0,l=o?new Array(s):void 0,u=0;u<s;++u)r&&(m[u]=i),o&&(l[u]=n);return new F({positions:a,maximumHeights:l,minimumHeights:m,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},F.createGeometry=function(t){var r=t._positions,o=t._minimumHeights,p=t._maximumHeights,d=t._vertexFormat,c=t._granularity,y=t._ellipsoid;if(p=v.WallGeometryLibrary.computePositions(y,r,p,o,c,!0),e.defined(p)){for(var f=p.bottomPositions,g=p.topPositions,h=(o=p.numCorners,g.length),F=(c=2*h,d.position?new Float64Array(c):void 0),L=d.normal?new Float32Array(c):void 0,k=d.tangent?new Float32Array(c):void 0,H=d.bitangent?new Float32Array(c):void 0,V=d.st?new Float32Array(c/3*2):void 0,G=0,D=0,P=0,T=0,z=0,O=w,R=E,S=_,I=!0,N=0,M=1/((h/=3)-o-1),W=0;W<h;++W){var B,U=3*W,q=i.Cartesian3.fromArray(g,U,C),J=i.Cartesian3.fromArray(f,U,b);d.position&&(F[G++]=J.x,F[G++]=J.y,F[G++]=J.z,F[G++]=q.x,F[G++]=q.y,F[G++]=q.z),d.st&&(V[z++]=N,V[z++]=0,V[z++]=N,V[z++]=1),(d.normal||d.tangent||d.bitangent)&&(B=i.Cartesian3.clone(i.Cartesian3.ZERO,A),J=i.Cartesian3.subtract(q,y.geodeticSurfaceNormal(q,b),b),W+1<h&&(B=i.Cartesian3.fromArray(g,3+U,A)),I&&(U=i.Cartesian3.subtract(B,q,x),J=i.Cartesian3.subtract(J,q,C),O=i.Cartesian3.normalize(i.Cartesian3.cross(J,U,O),O),I=!1),i.Cartesian3.equalsEpsilon(q,B,a.CesiumMath.EPSILON10)?I=!0:(N+=M,d.tangent&&(R=i.Cartesian3.normalize(i.Cartesian3.subtract(B,q,R),R)),d.bitangent&&(S=i.Cartesian3.normalize(i.Cartesian3.cross(O,R,S),S))),d.normal&&(L[D++]=O.x,L[D++]=O.y,L[D++]=O.z,L[D++]=O.x,L[D++]=O.y,L[D++]=O.z),d.tangent&&(k[T++]=R.x,k[T++]=R.y,k[T++]=R.z,k[T++]=R.x,k[T++]=R.y,k[T++]=R.z),d.bitangent&&(H[P++]=S.x,H[P++]=S.y,H[P++]=S.z,H[P++]=S.x,H[P++]=S.y,H[P++]=S.z))}p=new l.GeometryAttributes,d.position&&(p.position=new m.GeometryAttribute({componentDatatype:s.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:F})),d.normal&&(p.normal=new m.GeometryAttribute({componentDatatype:s.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:L})),d.tangent&&(p.tangent=new m.GeometryAttribute({componentDatatype:s.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:k})),d.bitangent&&(p.bitangent=new m.GeometryAttribute({componentDatatype:s.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:H})),d.st&&(p.st=new m.GeometryAttribute({componentDatatype:s.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:V}));var Y=c/3;c-=6*(o+1);var Z=u.IndexDatatype.createTypedArray(Y,c),j=0;for(W=0;W<Y-2;W+=2){var K=W,Q=W+2,X=i.Cartesian3.fromArray(F,3*K,C),$=i.Cartesian3.fromArray(F,3*Q,b);i.Cartesian3.equalsEpsilon(X,$,a.CesiumMath.EPSILON10)||(X=W+1,$=W+3,Z[j++]=X,Z[j++]=K,Z[j++]=$,Z[j++]=$,Z[j++]=K,Z[j++]=Q)}return new m.Geometry({attributes:p,indices:Z,primitiveType:m.PrimitiveType.TRIANGLES,boundingSphere:new n.BoundingSphere.fromVertices(F)})}},function(t,a){return e.defined(a)&&(t=F.unpack(t,a)),t._ellipsoid=i.Ellipsoid.clone(t._ellipsoid),F.createGeometry(t)}}));