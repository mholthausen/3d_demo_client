define(["exports","./when-54c2dc71","./Check-6c0211bc","./Cartesian2-bddc1162","./Transforms-6f81ad4c"],(function(t,e,n,i,h){"use strict";function r(t,n,i,h){this.x=e.defaultValue(t,0),this.y=e.defaultValue(n,0),this.width=e.defaultValue(i,0),this.height=e.defaultValue(h,0)}r.packedLength=4,r.pack=function(t,n,i){return i=e.defaultValue(i,0),n[i++]=t.x,n[i++]=t.y,n[i++]=t.width,n[i]=t.height,n},r.unpack=function(t,n,i){return n=e.defaultValue(n,0),e.defined(i)||(i=new r),i.x=t[n++],i.y=t[n++],i.width=t[n++],i.height=t[n],i},r.fromPoints=function(t,n){if(e.defined(n)||(n=new r),!e.defined(t)||0===t.length)return n.x=0,n.y=0,n.width=0,n.height=0,n;for(var i=t.length,h=t[0].x,a=t[0].y,d=t[0].x,u=t[0].y,c=1;c<i;c++){var o=(f=t[c]).x,f=f.y;h=Math.min(o,h),d=Math.max(o,d),a=Math.min(f,a),u=Math.max(f,u)}return n.x=h,n.y=a,n.width=d-h,n.height=u-a,n};var a=new h.GeographicProjection,d=new i.Cartographic,u=new i.Cartographic;r.fromRectangle=function(t,n,h){if(e.defined(h)||(h=new r),!e.defined(t))return h.x=0,h.y=0,h.width=0,h.height=0,h;var c=(n=e.defaultValue(n,a)).project(i.Rectangle.southwest(t,d));return t=n.project(i.Rectangle.northeast(t,u)),i.Cartesian2.subtract(t,c,t),h.x=c.x,h.y=c.y,h.width=t.x,h.height=t.y,h},r.clone=function(t,n){if(e.defined(t))return e.defined(n)?(n.x=t.x,n.y=t.y,n.width=t.width,n.height=t.height,n):new r(t.x,t.y,t.width,t.height)},r.union=function(t,n,i){e.defined(i)||(i=new r);var h=Math.min(t.x,n.x),a=Math.min(t.y,n.y),d=Math.max(t.x+t.width,n.x+n.width);return n=Math.max(t.y+t.height,n.y+n.height),i.x=h,i.y=a,i.width=d-h,i.height=n-a,i},r.expand=function(t,e,n){n=r.clone(t,n);var i=e.x-n.x;return t=e.y-n.y,i>n.width?n.width=i:i<0&&(n.width-=i,n.x=e.x),t>n.height?n.height=t:t<0&&(n.height-=t,n.y=e.y),n},r.intersect=function(t,e){var n=t.x,i=t.y,r=e.x,a=e.y;return n>r+e.width||n+t.width<r||i+t.height<a||i>a+e.height?h.Intersect.OUTSIDE:h.Intersect.INTERSECTING},r.equals=function(t,n){return t===n||e.defined(t)&&e.defined(n)&&t.x===n.x&&t.y===n.y&&t.width===n.width&&t.height===n.height},r.prototype.clone=function(t){return r.clone(this,t)},r.prototype.intersect=function(t){return r.intersect(this,t)},r.prototype.equals=function(t){return r.equals(this,t)},t.BoundingRectangle=r}));