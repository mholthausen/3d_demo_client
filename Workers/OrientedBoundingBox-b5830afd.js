define(["exports","./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-6f81ad4c","./Plane-b6058d9b","./EllipsoidTangentPlane-c3f203b0"],(function(a,t,e,n,r,i,s,o){"use strict";function C(a,e){this.center=r.Cartesian3.clone(t.defaultValue(a,r.Cartesian3.ZERO)),this.halfAxes=i.Matrix3.clone(t.defaultValue(e,i.Matrix3.ZERO))}C.packedLength=r.Cartesian3.packedLength+i.Matrix3.packedLength,C.pack=function(a,e,n){return n=t.defaultValue(n,0),r.Cartesian3.pack(a.center,e,n),i.Matrix3.pack(a.halfAxes,e,n+r.Cartesian3.packedLength),e},C.unpack=function(a,e,n){return e=t.defaultValue(e,0),t.defined(n)||(n=new C),r.Cartesian3.unpack(a,e,n.center),i.Matrix3.unpack(a,e+r.Cartesian3.packedLength,n.halfAxes),n};var c=new r.Cartesian3,u=new r.Cartesian3,d=new r.Cartesian3,l=new r.Cartesian3,h=new r.Cartesian3,x=new r.Cartesian3,M=new i.Matrix3,m={unitary:new i.Matrix3,diagonal:new i.Matrix3};C.fromPoints=function(a,e){if(t.defined(e)||(e=new C),!t.defined(a)||0===a.length)return e.halfAxes=i.Matrix3.ZERO,e.center=r.Cartesian3.ZERO,e;for(var n=a.length,s=r.Cartesian3.clone(a[0],c),o=1;o<n;o++)r.Cartesian3.add(s,a[o],s);var f=1/n;r.Cartesian3.multiplyByScalar(s,f,s);var p,g=0,w=0,y=0,b=0,O=0,P=0;for(o=0;o<n;o++)g+=(p=r.Cartesian3.subtract(a[o],s,u)).x*p.x,w+=p.x*p.y,y+=p.x*p.z,b+=p.y*p.y,O+=p.y*p.z,P+=p.z*p.z;g*=f,w*=f,y*=f,b*=f,O*=f,P*=f,(f=M)[0]=g,f[1]=w,f[2]=y,f[3]=w,f[4]=b,f[5]=O,f[6]=y,f[7]=O,f[8]=P,f=i.Matrix3.computeEigenDecomposition(f,m),f=i.Matrix3.clone(f.unitary,e.halfAxes);var N=i.Matrix3.getColumn(f,0,l),A=i.Matrix3.getColumn(f,1,h),T=i.Matrix3.getColumn(f,2,x),R=-Number.MAX_VALUE,I=-Number.MAX_VALUE,E=-Number.MAX_VALUE,L=Number.MAX_VALUE,z=Number.MAX_VALUE,S=Number.MAX_VALUE;for(o=0;o<n;o++)p=a[o],R=Math.max(r.Cartesian3.dot(N,p),R),I=Math.max(r.Cartesian3.dot(A,p),I),E=Math.max(r.Cartesian3.dot(T,p),E),L=Math.min(r.Cartesian3.dot(N,p),L),z=Math.min(r.Cartesian3.dot(A,p),z),S=Math.min(r.Cartesian3.dot(T,p),S);return N=r.Cartesian3.multiplyByScalar(N,.5*(L+R),N),A=r.Cartesian3.multiplyByScalar(A,.5*(z+I),A),T=r.Cartesian3.multiplyByScalar(T,.5*(S+E),T),f=r.Cartesian3.add(N,A,e.center),r.Cartesian3.add(f,T,f),(f=d).x=R-L,f.y=I-z,f.z=E-S,r.Cartesian3.multiplyByScalar(f,.5,f),i.Matrix3.multiplyByScale(e.halfAxes,f,e.halfAxes),e};var f=new r.Cartesian3,p=new r.Cartesian3;function g(a,e,n,s,o,c,u,d,l,h,x){t.defined(x)||(x=new C);var M=x.halfAxes;return i.Matrix3.setColumn(M,0,e,M),i.Matrix3.setColumn(M,1,n,M),i.Matrix3.setColumn(M,2,s,M),(n=f).x=(o+c)/2,n.y=(u+d)/2,n.z=(l+h)/2,(s=p).x=(c-o)/2,s.y=(d-u)/2,s.z=(h-l)/2,l=x.center,n=i.Matrix3.multiplyByVector(M,n,n),r.Cartesian3.add(a,n,l),i.Matrix3.multiplyByScale(M,s,M),x}var w=new r.Cartographic,y=new r.Cartesian3,b=new r.Cartographic,O=new r.Cartographic,P=new r.Cartographic,N=new r.Cartographic,A=new r.Cartographic,T=new r.Cartesian3,R=new r.Cartesian3,I=new r.Cartesian3,E=new r.Cartesian3,L=new r.Cartesian3,z=new r.Cartesian2,S=new r.Cartesian2,U=new r.Cartesian2,V=new r.Cartesian2,v=new r.Cartesian2,B=new r.Cartesian3,_=new r.Cartesian3,k=new r.Cartesian3,W=new r.Cartesian3,D=new r.Cartesian2,q=new r.Cartesian3,X=new r.Cartesian3,j=new r.Cartesian3,Z=new s.Plane(r.Cartesian3.UNIT_X,0);C.fromRectangle=function(a,e,i,C,c){if(e=t.defaultValue(e,0),i=t.defaultValue(i,0),C=t.defaultValue(C,r.Ellipsoid.WGS84),a.width<=n.CesiumMath.PI){var u=r.Rectangle.center(a,w),d=C.cartographicToCartesian(u,y),l=new o.EllipsoidTangentPlane(d,C),h=l.plane,x=u.longitude,M=a.south<0&&0<a.north?0:u.latitude,m=r.Cartographic.fromRadians(x,a.north,i,b),f=r.Cartographic.fromRadians(a.west,a.north,i,O),p=r.Cartographic.fromRadians(a.west,M,i,P),G=r.Cartographic.fromRadians(a.west,a.south,i,N),F=r.Cartographic.fromRadians(x,a.south,i,A),Y=C.cartographicToCartesian(m,T),H=C.cartographicToCartesian(f,R),J=C.cartographicToCartesian(p,I),K=C.cartographicToCartesian(G,E);return d=C.cartographicToCartesian(F,L),u=l.projectPointToNearestOnPlane(Y,z),M=l.projectPointToNearestOnPlane(H,S),x=l.projectPointToNearestOnPlane(J,U),m=l.projectPointToNearestOnPlane(K,V),p=l.projectPointToNearestOnPlane(d,v),Y=-(F=Math.min(M.x,x.x,m.x)),J=Math.max(M.y,u.y),d=Math.min(m.y,p.y),f.height=G.height=e,H=C.cartographicToCartesian(f,R),K=C.cartographicToCartesian(G,E),x=Math.min(s.Plane.getPointDistance(h,H),s.Plane.getPointDistance(h,K)),M=i,g(l.origin,l.xAxis,l.yAxis,l.zAxis,F,Y,d,J,x,M,c)}return u=0<a.south,m=a.north<0,p=u?a.south:m?a.north:0,f=r.Rectangle.center(a,w).longitude,(G=r.Cartesian3.fromRadians(f,p,i,C,B)).z=0,H=Math.abs(G.x)<n.CesiumMath.EPSILON10&&Math.abs(G.y)<n.CesiumMath.EPSILON10?r.Cartesian3.UNIT_X:r.Cartesian3.normalize(G,_),K=r.Cartesian3.UNIT_Z,l=r.Cartesian3.cross(H,K,k),h=s.Plane.fromPointNormal(G,H,Z),f=r.Cartesian3.fromRadians(f+n.CesiumMath.PI_OVER_TWO,p,i,C,W),F=-(Y=r.Cartesian3.dot(s.Plane.projectPointOntoPlane(h,f,D),l)),J=r.Cartesian3.fromRadians(0,a.north,m?e:i,C,q).z,d=r.Cartesian3.fromRadians(0,a.south,u?e:i,C,X).z,C=r.Cartesian3.fromRadians(a.east,p,i,C,j),g(G,l,K,H,F,Y,d,J,x=s.Plane.getPointDistance(h,C),M=0,c)},C.clone=function(a,e){if(t.defined(a))return t.defined(e)?(r.Cartesian3.clone(a.center,e.center),i.Matrix3.clone(a.halfAxes,e.halfAxes),e):new C(a.center,a.halfAxes)},C.intersectPlane=function(a,t){var e=a.center,n=t.normal,s=a.halfAxes,o=n.x,C=n.y;return a=n.z,s=Math.abs(o*s[i.Matrix3.COLUMN0ROW0]+C*s[i.Matrix3.COLUMN0ROW1]+a*s[i.Matrix3.COLUMN0ROW2])+Math.abs(o*s[i.Matrix3.COLUMN1ROW0]+C*s[i.Matrix3.COLUMN1ROW1]+a*s[i.Matrix3.COLUMN1ROW2])+Math.abs(o*s[i.Matrix3.COLUMN2ROW0]+C*s[i.Matrix3.COLUMN2ROW1]+a*s[i.Matrix3.COLUMN2ROW2]),(t=r.Cartesian3.dot(n,e)+t.distance)<=-s?i.Intersect.OUTSIDE:s<=t?i.Intersect.INSIDE:i.Intersect.INTERSECTING};var G=new r.Cartesian3,F=new r.Cartesian3,Y=new r.Cartesian3,H=new r.Cartesian3;C.distanceSquaredTo=function(a,t){var e,n=r.Cartesian3.subtract(t,a.center,f),s=a.halfAxes,o=i.Matrix3.getColumn(s,0,G),C=i.Matrix3.getColumn(s,1,F),c=i.Matrix3.getColumn(s,2,Y),u=r.Cartesian3.magnitude(o);return t=r.Cartesian3.magnitude(C),a=r.Cartesian3.magnitude(c),r.Cartesian3.normalize(o,o),r.Cartesian3.normalize(C,C),r.Cartesian3.normalize(c,c),(s=H).x=r.Cartesian3.dot(n,o),s.y=r.Cartesian3.dot(n,C),s.z=r.Cartesian3.dot(n,c),c=0,s.x<-u?c+=(e=s.x+u)*e:s.x>u&&(c+=(e=s.x-u)*e),s.y<-t?c+=(e=s.y+t)*e:s.y>t&&(c+=(e=s.y-t)*e),s.z<-a?c+=(e=s.z+a)*e:s.z>a&&(c+=(e=s.z-a)*e),c};var J=new r.Cartesian3,K=new r.Cartesian3;C.computePlaneDistances=function(a,e,n,s){t.defined(s)||(s=new i.Interval);var o=Number.POSITIVE_INFINITY,C=Number.NEGATIVE_INFINITY,c=a.center,u=a.halfAxes,d=i.Matrix3.getColumn(u,0,G),l=i.Matrix3.getColumn(u,1,F),h=i.Matrix3.getColumn(u,2,Y),x=r.Cartesian3.add(d,l,J);return r.Cartesian3.add(x,h,x),r.Cartesian3.add(x,c,x),a=r.Cartesian3.subtract(x,e,K),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.add(c,d,x),r.Cartesian3.add(x,l,x),r.Cartesian3.subtract(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.add(c,d,x),r.Cartesian3.subtract(x,l,x),r.Cartesian3.add(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.add(c,d,x),r.Cartesian3.subtract(x,l,x),r.Cartesian3.subtract(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.subtract(c,d,x),r.Cartesian3.add(x,l,x),r.Cartesian3.add(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.subtract(c,d,x),r.Cartesian3.add(x,l,x),r.Cartesian3.subtract(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.subtract(c,d,x),r.Cartesian3.subtract(x,l,x),r.Cartesian3.add(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),r.Cartesian3.subtract(c,d,x),r.Cartesian3.subtract(x,l,x),r.Cartesian3.subtract(x,h,x),r.Cartesian3.subtract(x,e,a),u=r.Cartesian3.dot(n,a),o=Math.min(u,o),C=Math.max(u,C),s.start=o,s.stop=C,s};var Q=new i.BoundingSphere;C.isOccluded=function(a,t){return a=i.BoundingSphere.fromOrientedBoundingBox(a,Q),!t.isBoundingSphereVisible(a)},C.prototype.intersectPlane=function(a){return C.intersectPlane(this,a)},C.prototype.distanceSquaredTo=function(a){return C.distanceSquaredTo(this,a)},C.prototype.computePlaneDistances=function(a,t,e){return C.computePlaneDistances(this,a,t,e)},C.prototype.isOccluded=function(a){return C.isOccluded(this,a)},C.equals=function(a,e){return a===e||t.defined(a)&&t.defined(e)&&r.Cartesian3.equals(a.center,e.center)&&i.Matrix3.equals(a.halfAxes,e.halfAxes)},C.prototype.clone=function(a){return C.clone(this,a)},C.prototype.equals=function(a){return C.equals(this,a)},a.OrientedBoundingBox=C}));