define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-bddc1162","./Transforms-6f81ad4c","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-700c1da0","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-7f3bcd5c","./Plane-b6058d9b","./arrayRemoveDuplicates-ebc732b0","./BoundingRectangle-4f9baeda","./EllipsoidTangentPlane-c3f203b0","./EllipsoidRhumbLine-c704bf4c","./PolygonPipeline-1aceedbc","./PolylineVolumeGeometryLibrary-0216ec14","./EllipsoidGeodesic-30fae80b","./PolylinePipeline-7685bebd"],(function(e,i,n,t,a,r,o,l,s,p,c,d,u,y,h,f,g,m,b,E,v){"use strict";function P(i){var a=(i=e.defaultValue(i,e.defaultValue.EMPTY_OBJECT)).polylinePositions,r=i.shapePositions;this._positions=a,this._shape=r,this._ellipsoid=t.Ellipsoid.clone(e.defaultValue(i.ellipsoid,t.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(i.cornerType,b.CornerType.ROUNDED),this._granularity=e.defaultValue(i.granularity,n.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry",a=1+a.length*t.Cartesian3.packedLength,a+=1+r.length*t.Cartesian2.packedLength,this.packedLength=a+t.Ellipsoid.packedLength+2}P.pack=function(i,n,a){var r;a=e.defaultValue(a,0);var o=i._positions,l=o.length;for(n[a++]=l,r=0;r<l;++r,a+=t.Cartesian3.packedLength)t.Cartesian3.pack(o[r],n,a);var s=i._shape;for(l=s.length,n[a++]=l,r=0;r<l;++r,a+=t.Cartesian2.packedLength)t.Cartesian2.pack(s[r],n,a);return t.Ellipsoid.pack(i._ellipsoid,n,a),a+=t.Ellipsoid.packedLength,n[a++]=i._cornerType,n[a]=i._granularity,n};var _=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:_,height:void 0,cornerType:void 0,granularity:void 0};P.unpack=function(i,n,a){n=e.defaultValue(n,0);for(var r=i[n++],o=new Array(r),l=0;l<r;++l,n+=t.Cartesian3.packedLength)o[l]=t.Cartesian3.unpack(i,n);r=i[n++];var s=new Array(r);for(l=0;l<r;++l,n+=t.Cartesian2.packedLength)s[l]=t.Cartesian2.unpack(i,n);var p=t.Ellipsoid.unpack(i,n,_);n+=t.Ellipsoid.packedLength;var c=i[n++],d=i[n];return e.defined(a)?(a._positions=o,a._shape=s,a._ellipsoid=t.Ellipsoid.clone(p,a._ellipsoid),a._cornerType=c,a._granularity=d,a):(k.polylinePositions=o,k.shapePositions=s,k.cornerType=c,k.granularity=d,new P(k))};var C=new h.BoundingRectangle;return P.createGeometry=function(e){var i=e._positions,n=y.arrayRemoveDuplicates(i,t.Cartesian3.equalsEpsilon),r=e._shape;if(r=b.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(r),!(n.length<2||r.length<3))return m.PolygonPipeline.computeWindingOrder2D(r)===m.WindingOrder.CLOCKWISE&&r.reverse(),i=h.BoundingRectangle.fromPoints(r,C),function(e,i){var n=new p.GeometryAttributes;n.position=new s.GeometryAttribute({componentDatatype:l.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var t=i.length,r=(i=n.position.values.length/3,e.length/3/t),o=c.IndexDatatype.createTypedArray(i,2*t*(1+r)),d=0,u=0,y=u*t;for(g=0;g<t-1;g++)o[d++]=g+y,o[d++]=g+y+1;for(o[d++]=t-1+y,o[d++]=y,y=(u=r-1)*t,g=0;g<t-1;g++)o[d++]=g+y,o[d++]=g+y+1;for(o[d++]=t-1+y,o[d++]=y,u=0;u<r-1;u++)for(var h=t*u,f=h+t,g=0;g<t;g++)o[d++]=g+h,o[d++]=g+f;return new s.Geometry({attributes:n,indices:c.IndexDatatype.createTypedArray(i,o),boundingSphere:a.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.LINES})}(b.PolylineVolumeGeometryLibrary.computePositions(n,r,i,e,!1),r)},function(i,n){return e.defined(n)&&(i=P.unpack(i,n)),i._ellipsoid=t.Ellipsoid.clone(i._ellipsoid),P.createGeometry(i)}}));