define(["./when-54c2dc71","./Cartesian2-49b1de22","./arrayRemoveDuplicates-216006b0","./BoundingRectangle-95b9a92c","./Transforms-e9dbfb40","./ComponentDatatype-6d99a1ee","./PolylineVolumeGeometryLibrary-8f28f929","./Check-6c0211bc","./GeometryAttribute-669569db","./GeometryAttributes-4fcfcf40","./IndexDatatype-46306178","./Math-44e92d6b","./PolygonPipeline-72c97573","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./EllipsoidTangentPlane-c4704d0f","./IntersectionTests-6ead8677","./Plane-8f7e53d1","./PolylinePipeline-eb80587e","./EllipsoidGeodesic-a2d57ae0","./EllipsoidRhumbLine-9b557f71"],(function(e,i,n,t,a,r,o,l,s,p,d,c,u,y,h,g,f,m,E,v,P){"use strict";function _(n){var t=(n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT)).polylinePositions,a=n.shapePositions;this._positions=t,this._shape=a,this._ellipsoid=i.Ellipsoid.clone(e.defaultValue(n.ellipsoid,i.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(n.cornerType,o.CornerType.ROUNDED),this._granularity=e.defaultValue(n.granularity,c.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry",t=1+t.length*i.Cartesian3.packedLength,t+=1+a.length*i.Cartesian2.packedLength,this.packedLength=t+i.Ellipsoid.packedLength+2}_.pack=function(n,t,a){var r;a=e.defaultValue(a,0);var o=n._positions,l=o.length;for(t[a++]=l,r=0;r<l;++r,a+=i.Cartesian3.packedLength)i.Cartesian3.pack(o[r],t,a);var s=n._shape;for(l=s.length,t[a++]=l,r=0;r<l;++r,a+=i.Cartesian2.packedLength)i.Cartesian2.pack(s[r],t,a);return i.Ellipsoid.pack(n._ellipsoid,t,a),a+=i.Ellipsoid.packedLength,t[a++]=n._cornerType,t[a]=n._granularity,t};var b=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:b,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(n,t,a){t=e.defaultValue(t,0);for(var r=n[t++],o=new Array(r),l=0;l<r;++l,t+=i.Cartesian3.packedLength)o[l]=i.Cartesian3.unpack(n,t);r=n[t++];var s=new Array(r);for(l=0;l<r;++l,t+=i.Cartesian2.packedLength)s[l]=i.Cartesian2.unpack(n,t);var p=i.Ellipsoid.unpack(n,t,b);t+=i.Ellipsoid.packedLength;var d=n[t++],c=n[t];return e.defined(a)?(a._positions=o,a._shape=s,a._ellipsoid=i.Ellipsoid.clone(p,a._ellipsoid),a._cornerType=d,a._granularity=c,a):(k.polylinePositions=o,k.shapePositions=s,k.cornerType=d,k.granularity=c,new _(k))};var C=new t.BoundingRectangle;return _.createGeometry=function(e){var l=e._positions,c=n.arrayRemoveDuplicates(l,i.Cartesian3.equalsEpsilon),y=e._shape;if(y=o.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(y),!(c.length<2||y.length<3))return u.PolygonPipeline.computeWindingOrder2D(y)===u.WindingOrder.CLOCKWISE&&y.reverse(),l=t.BoundingRectangle.fromPoints(y,C),function(e,i){var n=new p.GeometryAttributes;n.position=new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var t=i.length,o=(i=n.position.values.length/3,e.length/3/t),l=d.IndexDatatype.createTypedArray(i,2*t*(1+o)),c=0,u=0,y=u*t;for(f=0;f<t-1;f++)l[c++]=f+y,l[c++]=f+y+1;for(l[c++]=t-1+y,l[c++]=y,y=(u=o-1)*t,f=0;f<t-1;f++)l[c++]=f+y,l[c++]=f+y+1;for(l[c++]=t-1+y,l[c++]=y,u=0;u<o-1;u++)for(var h=t*u,g=h+t,f=0;f<t;f++)l[c++]=f+h,l[c++]=f+g;return new s.Geometry({attributes:n,indices:d.IndexDatatype.createTypedArray(i,l),boundingSphere:a.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.LINES})}(o.PolylineVolumeGeometryLibrary.computePositions(c,y,l,e,!1),y)},function(n,t){return(n=e.defined(t)?_.unpack(n,t):n)._ellipsoid=i.Ellipsoid.clone(n._ellipsoid),_.createGeometry(n)}}));