define(["exports","./Cartesian2-49b1de22","./PolylineVolumeGeometryLibrary-8f28f929","./when-54c2dc71","./Math-44e92d6b","./Transforms-e9dbfb40","./PolylinePipeline-eb80587e"],(function(a,e,r,n,t,i,s){"use strict";var o={},C=new e.Cartesian3,l=new e.Cartesian3,y=new e.Cartesian3,u=new e.Cartesian3,d=[new e.Cartesian3,new e.Cartesian3],c=new e.Cartesian3,p=new e.Cartesian3,m=new e.Cartesian3,g=new e.Cartesian3,h=new e.Cartesian3,f=new e.Cartesian3,w=new e.Cartesian3,z=new e.Cartesian3,x=new e.Cartesian3,P=new e.Cartesian3,b=new i.Quaternion,A=new i.Matrix3;function B(a,n,s,o,y){var u,d=e.Cartesian3.angleBetween(e.Cartesian3.subtract(n,a,C),e.Cartesian3.subtract(s,a,l)),c=o===r.CornerType.BEVELED?1:Math.ceil(d/t.CesiumMath.toRadians(5))+1,p=(o=3*c,new Array(o));p[o-3]=s.x,p[o-2]=s.y,p[o-1]=s.z,u=y?i.Matrix3.fromQuaternion(i.Quaternion.fromAxisAngle(e.Cartesian3.negate(a,C),d/c,b),A):i.Matrix3.fromQuaternion(i.Quaternion.fromAxisAngle(a,d/c,b),A);var m=0;n=e.Cartesian3.clone(n,C);for(var g=0;g<c;g++)n=i.Matrix3.multiplyByVector(u,n,n),p[m++]=n.x,p[m++]=n.y,p[m++]=n.z;return p}function v(a,r,n,t){var i=C;return[(t||(r=e.Cartesian3.negate(r,r)),i=e.Cartesian3.add(a,r,i)).x,i.y,i.z,n.x,n.y,n.z]}function E(a,r,n,t){for(var i=new Array(a.length),s=new Array(a.length),o=e.Cartesian3.multiplyByScalar(r,n,C),d=e.Cartesian3.negate(o,l),c=0,p=a.length-1,m=0;m<a.length;m+=3){var g=e.Cartesian3.fromArray(a,m,y),h=e.Cartesian3.add(g,d,u);i[c++]=h.x,i[c++]=h.y,i[c++]=h.z,g=e.Cartesian3.add(g,o,u),s[p--]=g.z,s[p--]=g.y,s[p--]=g.x}return t.push(i,s),t}o.addAttribute=function(a,e,r,t){var i=e.x,s=e.y;e=e.z,n.defined(r)&&(a[r]=i,a[r+1]=s,a[r+2]=e),n.defined(t)&&(a[t]=e,a[t-1]=s,a[t-2]=i)};var S=new e.Cartesian3,D=new e.Cartesian3;o.computePositions=function(a){var n=a.granularity,i=a.positions,o=a.ellipsoid,l=a.width/2,y=a.cornerType,u=a.saveAttributes,b=c,A=p,M=m,T=g,N=h,L=f,O=w,R=z,V=x,Q=P,U=[],G=u?[]:void 0,I=u?[]:void 0,q=i[0],j=i[1];A=e.Cartesian3.normalize(e.Cartesian3.subtract(j,q,A),A),b=o.geodeticSurfaceNormal(q,b),T=e.Cartesian3.normalize(e.Cartesian3.cross(b,A,T),T),u&&(G.push(T.x,T.y,T.z),I.push(b.x,b.y,b.z)),O=e.Cartesian3.clone(q,O),q=j,M=e.Cartesian3.negate(A,M);for(var k,F,H,J,K,W,X,Y=[],Z=i.length,$=1;$<Z-1;$++){b=o.geodeticSurfaceNormal(q,b),j=i[$+1],A=e.Cartesian3.normalize(e.Cartesian3.subtract(j,q,A),A),N=e.Cartesian3.normalize(e.Cartesian3.add(A,M,N),N);var _=e.Cartesian3.multiplyByScalar(b,e.Cartesian3.dot(A,b),S);e.Cartesian3.subtract(A,_,_),e.Cartesian3.normalize(_,_);var aa=e.Cartesian3.multiplyByScalar(b,e.Cartesian3.dot(M,b),D);e.Cartesian3.subtract(M,aa,aa),e.Cartesian3.normalize(aa,aa),t.CesiumMath.equalsEpsilon(Math.abs(e.Cartesian3.dot(_,aa)),1,t.CesiumMath.EPSILON7)||(N=e.Cartesian3.cross(N,b,N),N=e.Cartesian3.cross(b,N,N),N=e.Cartesian3.normalize(N,N),_=l/Math.max(.25,e.Cartesian3.magnitude(e.Cartesian3.cross(N,M,C))),aa=r.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(A,M,q,o),N=e.Cartesian3.multiplyByScalar(N,_,N),aa?(R=e.Cartesian3.add(q,N,R),Q=e.Cartesian3.add(R,e.Cartesian3.multiplyByScalar(T,l,Q),Q),V=e.Cartesian3.add(R,e.Cartesian3.multiplyByScalar(T,2*l,V),V),d[0]=e.Cartesian3.clone(O,d[0]),d[1]=e.Cartesian3.clone(Q,d[1]),U=E(s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(b.x,b.y,b.z)),L=e.Cartesian3.clone(V,L),T=e.Cartesian3.normalize(e.Cartesian3.cross(b,A,T),T),V=e.Cartesian3.add(R,e.Cartesian3.multiplyByScalar(T,2*l,V),V),O=e.Cartesian3.add(R,e.Cartesian3.multiplyByScalar(T,l,O),O),y===r.CornerType.ROUNDED||y===r.CornerType.BEVELED?Y.push({leftPositions:B(R,L,V,y,aa)}):Y.push({leftPositions:v(q,e.Cartesian3.negate(N,N),V,aa)})):(V=e.Cartesian3.add(q,N,V),Q=e.Cartesian3.add(V,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(T,l,Q),Q),Q),R=e.Cartesian3.add(V,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(T,2*l,R),R),R),d[0]=e.Cartesian3.clone(O,d[0]),d[1]=e.Cartesian3.clone(Q,d[1]),U=E(s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(b.x,b.y,b.z)),L=e.Cartesian3.clone(R,L),T=e.Cartesian3.normalize(e.Cartesian3.cross(b,A,T),T),R=e.Cartesian3.add(V,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(T,2*l,R),R),R),O=e.Cartesian3.add(V,e.Cartesian3.negate(e.Cartesian3.multiplyByScalar(T,l,O),O),O),y===r.CornerType.ROUNDED||y===r.CornerType.BEVELED?Y.push({rightPositions:B(V,L,R,y,aa)}):Y.push({rightPositions:v(q,N,R,aa)})),M=e.Cartesian3.negate(A,M)),q=j}return b=o.geodeticSurfaceNormal(q,b),d[0]=e.Cartesian3.clone(O,d[0]),d[1]=e.Cartesian3.clone(q,d[1]),U=E(s.PolylinePipeline.generateArc({positions:d,granularity:n,ellipsoid:o}),T,l,U),u&&(G.push(T.x,T.y,T.z),I.push(b.x,b.y,b.z)),y===r.CornerType.ROUNDED&&(F=c,H=p,J=m,K=(k=U)[1],H=e.Cartesian3.fromArray(k[1],K.length-3,H),J=e.Cartesian3.fromArray(k[0],0,J),W=B(F=e.Cartesian3.midpoint(H,J,F),H,J,r.CornerType.ROUNDED,!1),a=k[(X=k.length-1)-1],K=k[X],H=e.Cartesian3.fromArray(a,a.length-3,H),J=e.Cartesian3.fromArray(K,0,J),J=[W,B(F=e.Cartesian3.midpoint(H,J,F),H,J,r.CornerType.ROUNDED,!1)]),{positions:U,corners:Y,lefts:G,normals:I,endPositions:J}},a.CorridorGeometryLibrary=o}));